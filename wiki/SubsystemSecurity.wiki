#summary Архитектура подсистемы безопасности
#labels Featured
= Подсистема безопасности =

== Модель безопасности ==

Модель безопасности ролевая. В модель входят следующие информационные единицы:

 * *Пользователь*. Оператор системы. Пользователь это конкретная личность. Исключением из этого правила является только пользователь Гость. Если не была произведена аутентификация пользователя, то считается что пользователь Гость. Пользователь может обладать полномочиями только на личные ресурсы. Для получения полномочия на разделяемый ресурс пользователю следует войти с какой-то ролью. Это определит, как его полномочия, так и рабочую обстановку.

 * *Роль*. Пользователь может иметь права работы в нескольких ролях, но в один момент времени пользователь играет только одну роль. Это и есть основное отличие от понятия группы полномочий. Аналогом роли в реальной жизни является должность работника предприятия. Так же как и должностная инструкция несет в себе информацию о правах, обязанностях и рабочих условиях работника, роль несет в себе информацию о _правах_, _обязанностях_ и _рабочей обстановке_ пользователя в виде полномочий.

 * *Группа полномочий*. Для того что-бы выполнять какую-то операцию, элементарную с точки зрения пользователя нужно обладать неким набором атомарных полномочий. Например для того, что-бы добавить новый объект сущности нужно иметь полномочие добавления сущности, полномочие чтения связанных сущностей, полномочие отображения пункта главного меню для добавления. Роль складывается из групп полномочий.

 * *Полномочие*. возможность делать какую-либо операцию с объектом полномочий. Объектами полномочий могут быть сущности модели данных, веб страницы, отчеты, пункты главного меню и т.д. Допустимые операции с объектом определяются спецификой объекта. Например для сущности это CRUD. Для пункта главного меню это операция его отображения. 

Наша модель безопасности структурно похожа на модель безопасности домена Windows NT 4 (пользователь - глобальная группа - локальная группа - права на объект), но понятие глобальной группы заменено понятием роли, напоминающим роли Interbase, с той лишь разницей, что для переключения между ролями не нужно повторно проходить аутентификацию.

== Реализация ==

Подсистема реализована на базе Apache Shiro. Для интеграции с Tapestry 5 использована библиотека, которая является форком Tymano tapestry-security. Shiro предлагает модель пользователь - роль - полномочие. Причем по их идеологии роли пользователя складываются, т.е. это фактически группы. Это несоответствие решается созданием собственного Realm для авторизации и кеширования информации о роли. Второе несоответствие это отсутствие звена группы полномочий. Это решается так же созданием собственного Realm и иерархических полномочий. Таким образом группа полномочий это разновидность самого полномочия.
Пользователи хранятся в ActiveDirectory, названия групп, членом которых является пользователь отображается в виде списка его ролей. Так как в AD есть путь к листу - группе, то этот путь отображается в имя роли в точечной нотации. Например группа cn=Users,cn=Teachers будет отображена в Users.Teachers.
Полномочия хранятся в сущности Acl. Она построена по принципу максимальной универсальности. Сущность содержит три атрибута:
 * *subject* субъект полномочий. Это пользователь, роль или группа полномочий.
 * *subjectType* тип субъекта.
 * *permission* полномочие в формате [http://shiro.apache.org/static/current/apidocs/org/apache/shiro/authz/permission/WildcardPermission.html Shiro WirdcardPermission]

== Виды полномочий и именование полномочий==

Если объект допускает несколько видов операций, то следует указывать какие именно операции, если для объекта допустима только одна операция, то ничего дополнительного указывать не нужно.

||Объект ||Префикс названия полномочия||Названия допустимых операций||Какими объектами исмользуется||
||Сущности модели||нет||read, insert, update, delete||группами полномочий||
||Пункты главного меню||`menu_`||нет||группами полномочий||
||Страницы||`page_`||нет||группами полномочий||
||Отчеты||`report_`||view, print||группами полномочий||
||Группа полномочий||`permg_`||нет||пользователями и ролями||
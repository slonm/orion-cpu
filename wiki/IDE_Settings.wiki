#summary Настройка среды разработки
#labels Phase-Implementation
= Настройка среды разработки =

Для настройки среды программирования на языке Java необходимо:

== Установить Java Development Kit ==
 * Скачать и установить [http://www.oracle.com/technetwork/java/javase/downloads/index.html Java Development Kit 1.7]
 * Установить переменную JAVA_HOME. Например `C:\Program Files\Java\jdk1.7.0_2` для Windows.
 * В переменную среды PATH добавить путь к исполняемым файлам. Например  `C:\Program Files\Java\jdk1.7.0_2\bin\` для Windows

== Установить Apache Maven ==
_*Maven устанавливать не обязательно. !NetBeans содержит встроенный maven.*_
 * Скачать и распаковать [http://maven.apache.org/download.html Maven 3] в `C:\maven`.
 * Установить переменную M2_HOME. Например `C:\maven` для Windows.
 * В переменную среды PATH добавить путь к исполняемым файлам. Например  `C:\maven\bin\` для Windows

 * Создать каталог C:\maven-repo.
 * В файле C:\maven\conf\settings.xml в теге settings добавить тег `<localRepository>C:\maven-repo</localRepository>`

== Установить `NetBeans` ==
 * Скачать и установить [http://www.netbeans.org/downloads/index.html NetBeans] из дистрибутива с конфигурацией, включающей JavaEE (Java или Все). 

 * В файле конфигурации `NetBeans` `C:\Program Files\NetBeans 7.0\etc\netbeans.conf` (В Linux `/usr/local/netbeans-x.x/etc/netbeans.conf`) к netbeans_default_options добавить `-J-Dfile.encoding=UTF-8 --fontsize 16 --locale en:US`

 * Выбрать Tools > Plugins > Installed > Downloaded. Нажать Add Plugin и установить плагины: 
org-netbeans-modules-tapestry.nbm 
org-netbeans-modules-tapestry-codetemplates.nbm 
org-netbeans-modules-web-tapestry-templates.nbm (можно взять [http://orion-cpu.googlecode.com/files/nbtapestrysupport.zip тут])
(версии файлов актуальны на 18.09.2009, в версиях Netbeans > 7.1 эти плагины могут не устанавливаться. Новые версии плагина смотреть на  [nbtapestrysupport.dev.java.net nbtapestrysupport.dev.java.net]). 
Перезапустить `NetBeans`. Установленные модули будут перечислены в
 Tools > Plugins > Installed > User Installed Plugins

 * Выбрать ''Tools > Plugins''. Вкладка Installed.
Выбрать ''Maven Project Support'' модуль и нажать кнопку активировать. Перезапустить `NetBeans`.

 * Выбрать Tools > Options > Miscellaneous > Maven. В поле External Maven Home указать местонахождение Maven (C:\maven).
В поле Local Repository указать путь к локальному репозиторию Maven C:\maven-repo.
Нажать кнопку "Edit Global Custom Goal Definitions..." и создать цели для запуска проекта в Jetty: 

[http://orion-cpu.googlecode.com/svn/wiki/jetty_run_Goal.PNG] 

и для запуска так же в Jetty, но в отладочном режиме: 

[http://orion-cpu.googlecode.com/svn/wiki/Debug_jetty_run_Goal.PNG]

 * Выполнить настройку клиента Subversion в !NetBeans: Team-Subversion-Checkout. Указать путь к репозиторию: https://orion-cpu.googlecode.com/svn/trunk/, При первом подключении будет выведено окно с предложением добавить в Вашу систему высылаемый сервером сертификат безопасности. Необходимо его принять (кнопка Accept Permanently).
После нажатия Next можно выбрать ту часть репозитория с которой необходимо работать.
Реализованная стратегия использования svn ресурсов основана на первом варианте из [http://www.gnuman.ru/stuff/svn_strateg/] 
Структура ресурса следующая:
{{{
/ 
        /trunk 
        /tags 
        /branches 
            /user1 
            /user2 
            /user3 
}}}
Стратегия использования различается от описанной только в ветке branches. Пользователи создают совместно разрабатываемые бранчи в каталоге branches, а индивидуально разрабатываемые в каталогах, которые соответствуют их имени (user1, user2). 
Плагин !NetBeans для работы с SVN плохо ведет себя при манипуляции с ветками (слияние, создание), поэтому рекомендуется использовать его только для элементарных операций (checkout, commit, update). Для работы с ветками рекомендуется использовать [http://tortoisesvn.net/ TortoiseSVN] для Windows или [http://www.rabbitvcs.org/ RabbitVCS] для Linux. Так же в для удобства работы в них рекомендуется установить diff утилиту [http://kdiff3.sourceforge.net/ KDiff3], которая позволяет сравнивать как файлы, так и каталоги.

Рекомендуется сделать дополнительную оптимизацию !NetBeans для конкретной рабочей станции: [http://jakeroid.com/uskorenie-i-optimizatsiya-rabotyi-netbeans-7-1.html Ускорение и оптимизация работы NetBeans 7.1]

==Запуск, отладка и Live class reloading==

Для запуска проекта модно использовать стандартные средства deploy !NetBeans (нажатием кнопки Run). В этом случае происходит deploy war архива проекта на указанный при запуске сервер приложений.
Tapestry5 поддерживает "горячую" подмену классов и ресурсов (см. [http://tapestry.apache.org/class-reloading.html Live Class and Template Reloading]). Но для ее работы нужно, что-бы сервер приложений работал не с war архивом, а с каталогами classpath, в которых лежат классы и ресурсы. Тогда Tapestry5 при обнаружении изменений в файлах классов будет автоматически делать их горячую замену. Запуск сервера приложений из каталога поддерживает Jetty. Цели для запуска Jetty сконфигурированы выше, а сам проект уже содержит нужные настройки как для целей maven, так и опций проекта для !NetBeans.
Для запуска проекта в Jetty нужно выбрать нужную цель maven в меню:

[http://orion-cpu.googlecode.com/svn/wiki/menu_maven_goal.png]

(настройка сделана по статье [http://www.troymaxventures.com/2009/05/rad-w-tapestry-5-netbeans-67-maven-and.html RAD w/ Tapestry 5, NetBeans 6.7, Maven, and Jetty : Really !!!]).

=== Проверка русской орфографии ===
Запускаем !NetBeans, открываем вкладку Tools -> Options -> Miscellaneous ->Spellchecker.
На вкладке нажимаем Add… и выбираем наш файл [http://orion-cpu.googlecode.com/files/aspell_dump-en_US%2Bru-yeyo%2Buk.rar aspell_dump-en_US+ru-yeyo+uk.txt]. Устанавливаем кодировку словаря в UTF-8 и вписываем локаль «ru».
Нажимаем Add — словарь должен появиться в списке. Для проверки орфографии русского языка выбираем локаль по-умолчанию «ru». Словарь будет использоваться только когда локаль словаря точно совпадает с локалью по-умолчанию.
Закрываем диалог и переходим в редактор. Окрываем любой файл, пишем слово по русски и сохраняем. !NetBeans запустит процесс проверки орфографии, который в первый раз будет генерировать индекс из нашего словаря. Поэтому не торопимся и ждем. 
Индексы словарей хранятся в папке ~/.netbeans/7.1beta/var/cache/dict/. Для нашего словаря должен появится файл dictionary_ru.trie1.
При удалении словаря из !NetBeans индексный файл не удаляется, нужно удалить его вручную.
(взято из [http://habrahabr.ru/blogs/java/133552/ Установка словарей для проверки орфографии в NetBeans])

Настройка среды завершена.

= Ссылки =

 * [http://m.habrahabr.ru/post/77382/ Apache Maven — основы]

 * [http://habrahabr.ru/blogs/development_tools/45203/ Работа с ветками SVN]
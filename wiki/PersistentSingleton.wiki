#summary Хранимые в одном экземпляре объекты
= Хранимые в одном экземпляре объекты =

Часто возникает необходимость сохранить в персистентном хранилище многократно употребляемый объект несущий смысловую нагрузку для пользователя. Примерами таких объектов могут быть: название нашего предприятия, ФИО руководителя, расчетные коэффициенты заработной платы и т.п. 
Кроме этого _некоторые объекты сущностей_ являются объектами такого же рода. Например дневная и заочная формы обучения, квалификационные уровни, некоторые населенные пункты. 

Для хранения PersistentSingleton с типом не обслуживаемым (не зарегистрированным) в персистентном хранилище используется две сущности - SerializableSingleton и StringSingleton. Если для типа значения сервис TypeCoercer может найти преобразование из строкового типа, то используется StringSingleton, в противном случае SerializableSingleton. Несериализуемые типы хранить нет возможности. Обе сущности содержат свойство Name, которое является уникальным ключом для поиска объекта.

Для того что-бы обслуживаемая сущность могла использоваться как PersistentSingleton в ней должно быть уникальное свойство помеченное аннотацией @UniqueKey.

Для получения из хранилища PersistentSingleton можно использовать аннотацию @PersistentSingleton:

`@PersistentSingleton("STATIONARY_EF") private EducationalForm stationary;`

`@PersistentSingleton("ENTERPRISE_NAME") private String enterprise;`

Для операций CRUD с PersistentSingleton используется сервис PersistentSingletonSource либо, как обычно, EntityManager в случае если PersistentSingleton обслуживаемого типа
#summary Каркас бизнес приложения

=Каркас бизнес-приложения Orion=

Каркас предоставляет ряд функциональности для возможности построения бизнес-приложения. 

==Пример бизнес-приложения==
Для иллюстрации этих возможностей рассмотрим как создается бизнес-приложение на примере подсистемы учета лицензий на подготовку специалистов. Общее описание подсистемы можно найти [SubsystemLicensing тут]. 
 
===Модель данных===
Модель данных реализуется в соответствии со спецификацией JPA2. Для удобства создания сущностей рекомендуется использовать следующие абстрактные классы:
  * ua.orion.core.persistence.AbstractEntity - базовая сущность c атрибутами "id" (идентификатор объекта) и "lastChange" (версия объекта);
  * ua.orion.core.persistence.AbstractNamedEntity - отличается от AbstractNamedEntity наличием атрибута "name";
  * ua.orion.core.persistence.AbstractEnumerationEntity - сущность - перечисление. Отличается от AbstractNamedEntity уникальностью атрибута "name";
  * ua.orion.core.persistence.AbstractReferenceEntity - базовый справочник. Отличается от AbstractNamedEntity наличием атрибутов  "shortName", "isObsolete", "uKey" (уникальный ключ).


===Локализованные подписи сущностей и из свойств===

===Представление сущности в строковом виде с учетом контекста===

===Авторизация по состоянию сущности===


==Контроллеры доступа к данным==

==Хранимые константы==
Доступ к сущностям в хранилище по символьным ключам. Хранение в хранилище карты <символьный ключ>:<значение> и другие возможности. 